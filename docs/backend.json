
{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User Profile",
      "type": "object",
      "description": "Represents a user's profile in the AssetFlow application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user, matches Firebase Auth UID."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "The user's display name."
        }
      },
      "required": ["id", "email", "name"]
    },
    "Asset": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Asset",
      "type": "object",
      "description": "Represents a shared asset or item in the inventory.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the asset."
        },
        "name": {
          "type": "string",
          "description": "Name of the asset."
        },
        "codeId": {
          "type": "string",
          "description": "Code or ID associated with the asset."
        },
        "city": {
          "type": "string",
          "description": "City or location where the asset is stored."
        },
        "value": {
          "type": "number",
          "description": "Value of the asset."
        },
        "observation": {
          "type": "string",
          "description": "Additional notes or observations about the asset."
        },
        "userId": {
          "type": "string",
          "description": "ID of the user who last created or modified this asset."
        },
        "categoryId": {
            "type": "string",
            "description": "ID of the category this asset belongs to."
        },
        "status": {
            "type": "string",
            "enum": ["ativo", "inativo"],
            "description": "The current status of the asset."
        }
      },
      "required": ["id", "name", "codeId", "city", "value", "userId", "categoryId", "status"]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a shared category for assets.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "name": {
          "type": "string",
          "description": "Name of the category."
        },
        "userId": {
          "type": "string",
          "description": "ID of the user who created this category."
        }
      },
      "required": ["id", "name", "userId"]
    },
    "Location": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Location",
      "type": "object",
      "description": "Represents a shared location for assets.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the location."
        },
        "name": {
          "type": "string",
          "description": "Name of the location."
        },
        "userId": {
          "type": "string",
          "description": "ID of the user who created this location."
        }
      },
      "required": ["id", "name", "userId"]
    },
    "HistoryLog": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "History Log",
        "type": "object",
        "description": "Represents a global log entry for a change made to an asset.",
        "properties": {
            "id": {
                "type": "string",
                "description": "Unique identifier for the history log entry."
            },
            "assetId": {
                "type": "string",
                "description": "ID of the asset that was changed."
            },
            "assetName": {
                "type": "string",
                "description": "Name of the asset at the time of the change."
            },
            "codeId": {
                "type": "string",
                "description": "Code ID of the asset."
            },
            "action": {
                "type": "string",
                "enum": ["Criado", "Atualizado", "Exclu√≠do", "Desativado", "Reativado"]
            },
            "details": {
                "type": "string",
                "description": "Description of what was changed."
            },
            "userId": {
                "type": "string",
                "description": "ID of the user who performed the action."
            },
            "userDisplayName": {
                "type": "string",
                "description": "Display name of the user who performed the action."
            },
            "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the action occurred."
            }
        },
        "required": ["id", "assetId", "assetName", "codeId", "action", "details", "userId", "userDisplayName", "timestamp"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/entities/UserProfile"
          },
          "description": "Stores individual user profiles, private to each user."
        }
      },
      {
        "path": "/assets/{assetId}",
        "definition": {
          "entityName": "Asset",
          "schema": {
            "$ref": "#/entities/Asset"
          },
          "description": "Stores the global list of all assets, accessible by any authenticated user."
        }
      },
      {
        "path": "/categories/{categoryId}",
        "definition": {
          "entityName": "Category",
          "schema": {
            "$ref": "#/entities/Category"
          },
          "description": "Stores the global list of asset categories, accessible by any authenticated user."
        }
      },
      {
        "path": "/locations/{locationId}",
        "definition": {
          "entityName": "Location",
          "schema": {
            "$ref": "#/entities/Location"
          },
          "description": "Stores the global list of asset locations, accessible by any authenticated user."
        }
      },
      {
        "path": "/history/{historyId}",
        "definition": {
          "entityName": "HistoryLog",
          "schema": {
            "$ref": "#/entities/HistoryLog"
          },
          "description": "Stores the global change history for all assets, accessible by any authenticated user."
        }
      }
    ],
    "reasoning": "The Firestore structure is designed for a collaborative, global inventory. All core data collections (assets, categories, locations, history) are at the root level, allowing any authenticated user to access them. User-specific data (profiles) is stored under /users/{userId} to keep account settings private. This model supports a multi-user environment where all users work on a single, unified dataset."
  }
}
